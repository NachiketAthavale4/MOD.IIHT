// <auto-generated />
using System;
using MOD.TechnologyService.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MOD.TechnologyService.Migrations
{
    [DbContext(typeof(TechnologyContext))]
    [Migration("20191110170637_ForeignKeyTraining")]
    partial class ForeignKeyTraining
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MOD.TechnologyService.Models.Technology", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Prerequisites")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Toc")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Technologies");
                });

            modelBuilder.Entity("MOD.TrainingService.Models.Training", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("AmountReceived");

                    b.Property<float>("AverageRating");

                    b.Property<float>("CommisionAmount");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("EndTime")
                        .HasColumnType("varchar(60)");

                    b.Property<float>("Fees");

                    b.Property<int>("MentorId");

                    b.Property<string>("MentorName")
                        .HasColumnType("varchar(60)");

                    b.Property<int>("Progress");

                    b.Property<int>("Rating");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("StartTime")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(60)");

                    b.Property<int>("TechnologyId");

                    b.Property<string>("TechnologyName")
                        .HasColumnType("varchar(60)");

                    b.Property<int>("UserId");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("TechnologyId")
                        .IsUnique();

                    b.ToTable("Training");
                });

            modelBuilder.Entity("MOD.TrainingService.Models.Training", b =>
                {
                    b.HasOne("MOD.TechnologyService.Models.Technology")
                        .WithOne("Training")
                        .HasForeignKey("MOD.TrainingService.Models.Training", "TechnologyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
